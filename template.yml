AWSTemplateFormatVersion: 2010-09-09

Description: >
  Creates the AWS infrastructure for running a React app in AWS using S3, CloudFront & Route53
Parameters:
  BaseUrl:
    Type: String
    Default: bev-ticketing-ecomapp.xyz
    Description: The DNS name of an existing Amazon Route 53 hosted zone,
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)[^\\.]$
    ConstraintDescription: Must be a valid DNS zone name WITHOUT trailing period.

  AppUrl:
    Type: String
    Default: bev-ticketing-ecomapp.xyz
    Description: The subdomain you want to use for your app. Use www for your main domain.

  AcmCertArn:
    Type: String
    Description: ARN of the Amazon Certificate Manager cert to use for SSL
    Default: arn:aws:acm:us-east-1:268919435141:certificate/62302602-c86e-4f88-a272-5a855acd136f

Resources:
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html
  AppBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: microfrontend-react-js

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html
  AppBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: WebAppBucketPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Action: "s3:GetObject"
            Principal:
              AWS:
                !Join [
                  "",
                  [
                    "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ",
                    !Ref OriginAccessIdentity,
                  ],
                ]
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref AppBucket
                - /*
          - Sid: GithubActionAccess
            Effect: Allow
            Action: "s3:GetObject"
            Principal:
              AWS: "268919435141"
            Principal:
              AWS:
                !Join [
                  "",
                  [
                    "arn:aws:iam::"
                    !Ref AWS::AccountId
                    ":user/microfrontend-github"
                  ],
                ]              
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref AppBucket
                - /*                
      Bucket: !Ref AppBucket

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cloudfrontoriginaccessidentity.html
  OriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Access identity between CloudFront and S3 bucket

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html
  AppDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt AppBucket.RegionalDomainName
            Id: MicroFrontEndReactJs
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${OriginAccessIdentity}
        Enabled: "true"
        Comment: CloudFront distribution for React App
        CustomErrorResponses:
          - ErrorCachingMinTTL: 10
            ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /container/latest/index.html
        DefaultRootObject: container/latest/index.html
        Aliases:
          - !Ref AppUrl
          - !Ref BaseUrl
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: "true"
          TargetOriginId: MicroFrontEndReactJs
          ForwardedValues:
            QueryString: "false"
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn: !Ref AcmCertArn
          MinimumProtocolVersion: TLSv1.2_2018 # recommended value if there is no browser support issue
          SslSupportMethod: sni-only

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordsetgroup.html
  WebAppDns:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub ${BaseUrl}.
      Comment: IP4 & IP6 alias targeted to CloudFront Distribution.
      RecordSets:
        - Name: !Ref AppUrl
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt
              - AppDistribution
              - DomainName
        - Name: !Ref AppUrl
          Type: AAAA
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt
              - AppDistribution
              - DomainName
        - Name: !Ref BaseUrl
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt
              - AppDistribution
              - DomainName
        - Name: !Ref BaseUrl
          Type: AAAA
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt
              - AppDistribution
              - DomainName

Outputs:
  AppBucket:
    Description: S3 Bucket hosting our microfrontend
    Value: !Ref AppBucket
  DistributionId:
    Value: !Ref AppDistribution
    Description: CloudFront DistributionId
  CloudFrontURL:
    Value: !Join
      - ""
      - - "https://"
        - !GetAtt
          - AppDistribution
          - DomainName
    Description: URL for website CDN
